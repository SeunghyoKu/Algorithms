#성실한 개미
#https://codeup.kr/problem.php?id=1099

#개미는 오른쪽으로만 움직이다가 장애물을 만나면 아래쪽으로 움직여 가장 빠른 길로 움직였다. (오른쪽으로 길이 있으면 다시 오른쪽으로 움직인다.)
#미로 상자의 구조가 0(갈 수 있는 곳), 1(벽 또는 장애물)로 주어지고,
#먹이가 2로 표시되어 주어질 때, 똑똑한 개미의 이동 경로를 예상해보자.
#단, 가장 아래의 가장 오른쪽에 도착한 경우나, 더 이상 움직일 수 없는 경우, 또는 먹이를 찾은 경우에는 그 곳에 머무른다고 가정한다.
#미로의 테두리는 모두 벽으로 되어있으며, 개미집은 반드시 (2, 2)에서 시작된다.

#입력
#10 * 10 크기의 미로 상자의 구조와 먹이의 위치가 입력된다.

#출력
#성실한 개미가 이동한 경로를 9로 표시해 출력한다.


#저장할 판 만들기
ant = [[0]*10 for i in range(10)]

#판 입력 받기
for i in range(10):
	a = input().split()
	for j in range(10):
		ant[i][j] = a[j]

def antmove(x, y):
	#현재 칸이 0이라면 9로 바꿔주고, 오른 쪽으로 한 칸 이동한다.
	if ant[x][y] == '0':
		ant[x][y] = '9'
		antmove(x, y+1)

	#현재 칸이 1이고 아래도 1이라면 끝내기, 현재칸이 1이고 아래가 1이 아니라면 아래로 이동한다.
	elif ant[x][y] == '1':
		if ant[x+1][y-1] == '1':
			return
		else:
			antmove(x+1, y-1)
	#현재칸이 2라면은 식사 후 끝낸다.
	else:
		ant[x][y] = '9'
		return

#시작 좌표는 2,2 이므로 배열이기 때문에 1,1에서 시작한다.
antmove(1,1)

for i in range(10):
	for j in range(10):
		print(ant[i][j], end = " ")
	print()
